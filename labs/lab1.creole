= Lab 1 =

== Install Node.js ==

# {{{ sudo apt-get install python-software-properties }}}
# {{{ sudo add-apt-repository ppa:chris-lea/node.js }}}
# {{{ sudo apt-get update }}}
# {{{ sudo apt-get install nodejs }}}

Without the first three commands, a very old version may be installed.

== Install MongoDB ==

# {{{ sudo apt-key adv --keyserver keyserver.ubuntu.com --recv 7F0CEB10 }}}
# {{{ echo "deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen" | sudo tee -a /etc/apt/sources.list }}}
# {{{ sudo apt-get update }}}
# {{{ sudo apt-get install mongodb-10gen }}}

With just {{{ sudo apt-get install mongodb }}}, an old version may be installed.

== Install npm ==

# {{{ sudo apt-get install curl }}}
# {{{ curl http://npmjs.org/install.sh | sudo sh }}}

It is advised not to install npm as root. Why?

== Install Express and Mongoose ==

# {{{ sudo npm install express mongoose -g }}}

It is advised not to install Mongoose globally. Why? (Express should be installed globally because it has an executable.)

== Hello, World ==

# {{{ express HelloWorld }}}
# {{{ cd HelloWorld && npm install }}}
# {{{ npm install mongoose }}} Why does Mongoose have to be installed locally even though it is installed globally?
# {{{ echo node_modules > .gitignore }}}

=== models.js ===

# Import mongoose
# Connect to the database
# Create a status schema
# Create a status model
# Create a status instance, if none exist
# Export the status model

{{{
/**
 * Module dependencies.
 */

var mongoose = require('mongoose');

mongoose.connect('mongodb://localhost/hello_world');

var StatusSchema = new mongoose.Schema({
  message: String
});

var Status = mongoose.model('Status', StatusSchema);

Status.count(function(err, c) {
  if (c == 0) {
    var status = new Status();
    status.message = 'Hello, World';
    status.save()
  }
});

exports.Status = Status;
}}}

=== routes/index.js ===

# Import the status model with {{{ var Status = require('../models').Status; }}}
# Replace {{{ res.render('index', { title: 'Express' }) }}} with
{{{
  Status.find(function(err, statuses) {
    res.render('index', { title: 'Express', statuses: statuses });
  });
}}}

=== views/index.jade ===

# Add
{{{
h2 Statuses
each status in statuses
  p #{status.message}
}}}

=== Try it out ===

# {{{ node app.js }}}
# [[ http://localhost:3000/ ]]
